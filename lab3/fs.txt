file = open() возвращает файловый декриптор

inode - структура где хранятся вся информация о файле
хранит метаданные и указатели на функции, которые что то делают с файлом

файловая система хранит укзатель на функцию read (к примеру)
inode хранит указатель на read

open() делает системный вызов sys_open, уровень над файловой системой (VFS)
sys_open() {
    while() {
        идем по пути от корня

        получаем dentry
        получаем inode
        lookup(inode, dir1,...); ищет файлы и каталоги, возвращает новый indode есил нашел dir1

        ...

        в конце цикла вызывает read для файла (или write или что то еще)
    } 
}

если директория является точкой монтирования, то он переключается на другую файловую систему
имя файла - жесткая ссылка
пока на него кто-то ссылается - файл существует
жесткая ссылка ссылается на inode
например . ..

символьная ссылка - сслыка на файл, можно сделать ссылку на другую файловую систему,
там прописан полный путь к файлу

значится fopen возвращает дескриптор, который потом мы передаем в read(например), 
read по этому дескриптору должен быть найти inode в котором уже есть функции для действий с этим файлом
у процессора есть структура task, у него есть свой контекст, fopen кладет указатель на inode в эту структуру
у каждого процесса свой собственный inode на каждый конкретный файл, теперь read может по дискрептору
найти в структуре task(для этого там есть массив данных, ли что то типа того), в этом массиве лежит указатель на inode
который read ищет по дискриптору, переходит по указателю к inode, и уже имеет все функции для действий файлов