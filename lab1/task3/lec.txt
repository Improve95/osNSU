лекция 4

мультиплексирование - ???

в специальную струкуру сохранит текущее состояние процесса
getcontext(&thread->before_start_routine);

это нужно для mythread_cancel

if (thread0>canceled) {
    setcontext(&(thread->before_start_routine));
}
сохраняем контекст
а после восстанавливаем контекст если у нас функция canceled


void mythread_testcancel(void) {
    ucont3xt_t 
    __mythread

    getcontext(&uctx);

    thread = gtid;

    if (thread->canceled) {
        setcontex()
    }
}