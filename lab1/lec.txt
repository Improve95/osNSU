лекция 1

каждый поток имеет свою структуру task, но в отличие от процессов,
потоки имеют одно и то же адресное пространство (картинку держи в голове)
в таких структурах task, есть указатель на адресное пространство, сделано это для того
чтобы при переключении между потоков не перезаписывать кэш таблицы трансляции.
При трансляции адресов из АП в оперативку процессор тратит много времени, для решения этой проблемы
существует кэш в процессоре для этого дела, но при переключении между процессами, ему нужно снова пересчитать
таблицу трансляции. Ну и потоки имеют общее адресное пространство, от этого пересчитывать ничего не надо.

потоки бывают ядерные(делегируются ядром OS) и пользовательские (работают только в userspace, переключение между ними
очень быстрое)

=====================================

лекция 2
при создании своего потока с помощью clone можно адресное пространство делать общим 
с помощью аттрибута CLONE_VM, тогда с структурах процессов будет указатель на адресное 
общее адресное пространство, если делать без флага клонвм, то в каждой структуре будет свое
адресное пространство

тут еще рассказывали про расшаривание области памяти на файл, вспомнили про механизм copyOnWrite,
только я забыл откуда на файл существуют разные указатели, даже если мы закрыли один дескриптор,
то кто еще ссылается на файл??

clone_vm разделяет ресурсы процесса, файлы - это тоже ресурс, со все вытекающем
при клонировании с clone_vm, у нас и массив с файловыми дескрипторами тоже одинаковый
а, для этого есть другой флаг - clone_files, если без него, снова же, то при закрытии 
файла в одном потоке, этот поток не сможет работать с файлом, а другой поток сможет

как раз сейчас вопрос про разные пиды процессов и потоков, для этого тоже есть флаг в clone
